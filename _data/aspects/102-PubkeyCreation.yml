###################################################
#
#  CryptoCurrency Security Standard (CCSS)
#
#  Copyright (c) 2015, CryptoCurrency Certification Consortium (C4)
# 
###################################################

id: 1.02
title: Pubkey Creation
file: 102-PubkeyCreation

category: Cryptographic Asset Management

description: >
  This aspect covers the creation of public keys (pubkeys) that can receive cryptocurrencies. Public keys in this context refer to the entire condition which must be satisfied in order to spend funds, and may be complex scripts created using key signing methodologies that require a single signature, multiple signatures from different private keys, or a minimum number of signatures from many private keys. Furthermore, pubkeys can be created as individual keypairs (commonly referred to as JBOK wallets, or “Just a Bunch Of Keys”) or in a deterministic way that allows a set of pubkeys to be created from a single master seed.
  Security of pubkey creation is derived from the integrity of the pubkey in the face of various risks such as a lost/stolen/compromised private key, and the confidentiality that would make it difficult to associate a pubkey with a particular actor.

level_one:
  - Unique pubkeys must be generated for every transaction. This enhances privacy by making it more difficult to determine which pubkeys belong to which entities. One of the most common methods of implementing this requirement is to use a deterministic seed.
  - In addition, systems that enforce new pubkeys for every transaction implicitly prevent cases where a compromised wallet continues to receive funds from actors who are not informed about the compromise as was seen in the days following the BitStamp compromise of early 2015.

level_two:
  - Pubkeys must require a minimum of 2 signatures in order to spend funds, where a separate actor holds each private key. Requiring 2 or more signatures increases the integrity of funds by reducing the risk of theft associated with a compromised private key or its holder. This is commonly referred to as “multi-sig.” The actors can either be human or system (i.e. two humans, two systems, or one human and one system) but must be separate entities that each manage their own private key.
  - Each pubkey should be defined to be satisfiable with redundant private keys for recovery purposes. This ensures that the funds are still available in the event one of the primary wallets becomes inaccessible for any reason. One common method of achieving this goal is to create a pubkey that requires any 2 of 3 possible signatures in order to spend funds (i.e.: there is 1 redundant key)
  - Pubkeys are assigned deterministically based on a seed that is kept private. Using JBOK wallets requires regular backups of each new keypair that is generated which increases the complexity of the system and raises the risk of human error that can cause disruptions to the business or accidental loss of funds if a backup does not include certain keys. Pubkeys that are assigned deterministically remove this risk and improve the integrity of the system.
  - Keys that have signing authority on a single wallet must be stored in different locations. By separating the wallet’s keys across multiple locations, the risks associated with localized disruptions to business (i.e. fire, flood, earthquake, break-ins) do not affect the organization’s ability to spend funds.

level_three:
  - Keys that have signing authority on a single wallet must be stored by multiple organizational entities. By giving keys to separate legal entities, such as lawyers, accountants, or other businesses, legal risks that can disrupt your business will not necessarily disrupt your funds.


components:
  - component: &010201
    id: 1.2.1
    title_short: Unique pubkey per transaction
    uncertified: Pubkeys/addresses are reused
    level_one: Unique pubkeys/addresses are generated for every transaction
    level_two: Unique pubkeys/addresses are generated for every transaction
    level_three: Unique pubkeys/addresses are generated for every transaction
  - component: &010202
    id: 1.2.2
    title_short: Multiple private keys for signing
    uncertified:
    level_one:
    level_two: Transactions require signatures from 2 or more private keys
    level_three: Transactions require signatures from 2 or more private keys
  - component: &010203
    id: 1.2.3
    title_short: Redundant private key for recovery
    uncertified:
    level_one:
    level_two: Redundant private keys are assigned for recovery purposes (i.e. 2of3, 3of5, etc.)
    level_three: Redundant private keys are assigned for recovery purposes (i.e. 2of3, 3of5, etc.)
  - component: &010204
    id: 1.2.4
    title_short: Deterministic wallets
    uncertified:
    level_one:
    level_two: Pubkeys are assigned deterministically
    level_three: Pubkeys are assigned deterministically
  - component: &010205
    id: 1.2.5
    title_short: Geographic distribution of private keys
    uncertified:
    level_one:
    level_two: Private keys are distributed across multiple separate locations
    level_three: Private keys are distributed across multiple separate locations
  - component: &010206
    id: 1.2.6
    title_short: Organizational distribution of private keys
    uncertified:
    level_one:
    level_two: 
    level_three: Private keys are distributed across multiple organizational entities

      
