###################################################
#
#  CryptoCurrency Security Standard (CCSS)
#
#  Copyright (c) 2016, CryptoCurrency Certification Consortium (C4)
#  See license.md
#
###################################################

id: 1.01
title: 鍵／シードの生成
file: 101-KeySeedGeneration


category: 暗号資産管理

description: >
 この観点は、暗号通貨システム内で使用される[暗号鍵]（＃key）と[シード（＃seed）]の生成を対象としています。 暗号鍵とシードを安全に作成するには、機密性と推測できない数の2つが必要です。 新しく作成された暗号鍵またはシードが意図しない者によって読み取られたりコピーされたりしないようにするには、機密性が必要です。 新たに作成された暗号鍵が意図しない当事者によって推測または特定されないようにするには、推測できない数が必要です。 以下にリストされた各ゴールは、暗号鍵やシードが機密で推測不能な方法で作成されるという保証を提供します。
 
level_one:
  - The [cryptographic keys](#key) and [seeds](#seed) are created by the [actor](#actor) who will be using it. This is an attempt to protect the confidentiality of the key. Any system that requires one actor to transfer a key or seed to another actor after generating it will fail to achieve Level I, with the exception of the initial configuration of an automated signing agent.
  - In cases where an automated agent will make use of a cryptographic key/seed, it is recommended that the administrator of that system generate the key/seed on a suitable offline system with sufficient [entropy](#entropy), have this key/seed [transferred securely](#strong-encryption) onto the target device, and then securely deleted using CCSS-compliant data sanitization techniques to protect the confidentiality of the key/seed.
  - Notably, transferring a cryptographic secret for backup purposes does not violate the &quot;Same Actor&quot; requirement, however those secrets must be transmitted and stored in a [strongly encrypted](#strong-encryption) format.
  - The [cryptographic keys](#key) and [seeds](#seed) are created on a system with sufficient entropy to ensure the keys are not created with any bias towards a reduced range of values, or other deterministic properties

level_two:
  - The [key](#key) or [seed](#seed) generation methodology is validated prior to use. Software that is used to generate seeds should be free from any features that restrict the generated seed to conform to deterministic values and features that store or transmit the generated seed to another [actor](#actor), except where such features enhance the effective security of the software (e.g. [DRBGs](#drbg)).
  - After software has been audited, a digital signature should be generated and published. The signature should be validated prior to each execution to ensure the software has not been altered since it passed its security audit.
  - In cases where keys or seeds are created without the use of software (e.g. dice, a deck of cards, or other non-digital source of [entropy](#entropy)), the creation methodology should be validated to ensure determinism is not present (i.e. there are no weighted dice, each card in the deck is unique, etc.).

level_three:
  - The [key](#key) or [seed](#seed) is generated using a [Deterministic Random Bit Generator (DRBG)](#drbg) that conforms to [NIST SP 800-90A](http://http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf), and has been seeded with at least two separate cryptographically secure sources of [entropy](#entropy) that have been combined in a cryptographically secure manner (e.g. SHA256[UnguessableFactor1 + UnguessableFactor2]). NIST SP 800-90A is a standard that ensures that deterministically-generated numbers follow a random distribution with respect to a deterministic seed. Thus, the ability to determine these random numbers is reducible to the ability to discover the DRBG's seed.
  - The Dual_EC DRBG from NIST SP 800-90A has been demonstrated to be [vulnerable](https://en.wikipedia.org/wiki/Dual_EC_DRBG) and should not be used.
  - Optionally, instead of a NIST SP 800-90A compliant DRBG with a combination of two seeds as specified above, the key or seed may also be generated by a Non-deterministic Random Bit Generator (NRBG), or a "True Random Number Generator" (TRNG) that passes industry-standard statistical tests for randomness such as [DIEHARD](http://www.stat.fsu.edu/pub/diehard/), Crypt-X, or [NIST STS](http://csrc.nist.gov/groups/ST/toolkit/rng/documentation_software.html).


components:
  - component: &010101
    id: 1.1.1
    title_short: Operator-created Key / Seed
    uncertified: Keys/seeds are issued to the keyholder by another actor
    level_one: Keys/seeds are created by the key/seed operator themselves
    level_two: Keys/seeds are created by the key/seed operator themselves
    level_three: Keys/seeds are created by the key/seed operator themselves
  - component: &010102
    id: 1.1.2
    title_short: Creation methodology is validated
    uncertified:
    level_one:
    level_two: Key/seed creation methodology is validated prior to use
    level_three: Key/seed creation methodology is validated prior to use
  - component: &010103
    id: 1.1.3
    title_short: DRBG Compliance
    uncertified: Keys / seeds are created with a non-compliant DRBG
    level_one: Key/seed is created using a NIST SP 800-90A compliant DRBG
    level_two: Key/seed is created using a NIST SP 800-90A compliant DRBG that has been seeded with a single cryptographically-secure sources of entropy
    level_three: |
      Key/seed is created using a NIST SP 800-90A compliant DRBG that has been seeded with multiple cryptographically-secure sources of entropy
      OR
      A NRBG that passes industry-standard statistical tests (DIEHARD, Crypt-X, NIST STS)
  - component: &010104
    id: 1.1.4
    title_short: Entropy Pool
    uncertified: Keys / seeds are created on system with insufficient entropy
    level_one: Key/seed is created on a system with sufficient entropy
    level_two: Key/seed is created on a system with sufficient entropy
    level_three: Key/seed is created on a system with sufficient entropy