###################################################
#
#  CryptoCurrency Security Standard (CCSS)
#
#  Copyright (c) 2016, CryptoCurrency Certification Consortium (C4)
#
###################################################

id: 1.02
title: Wallet Creation
file: 102-WalletCreation

category: Cryptographic Asset Management

description: >
  This aspect covers the creation of [wallets](#wallet) or [addresses](#address) that can receive cryptocurrencies. Wallets are created using key signing methodologies that can require a single key’s signature, multiple keys' signatures, or a minimum number of signatures from many keys. Furthermore, wallets can be created individually (commonly referred to as JBOK wallets, or "Just a Bunch Of Keys") or in a deterministic way that allows a set of addresses/key pairs to be created from a single master seed.
  Security of wallet creation is derived from the integrity of the wallet in the face of various risks such as a lost/stolen/compromised key, and the confidentiality of the wallet that would make it difficult to associate a wallet with a particular [actor](#actor).

level_one:
  - Systems that do not have multiple keys for signing, redundant key recovery, geographic or organizational distribution in place.
  - While no formal wallet creation documents exist, there are staff members who are familiar with the procedures necessary for wallet creation.

level_two:
  - Any [address](#address) generated by a [wallet](#wallet) must require a minimum of 2 signatures in order to spend funds, where a separate [actor](#actor) holds each signing [key](#key). Requiring 2 or more signatures on a wallet increases the integrity of funds by reducing the risk of theft associated with a compromised key or key holder. This is commonly referred to as a [multi-sig](#multisig) wallet. The actors can either be human or system (i.e. two humans, two systems, or one human and one system) but must be separate entities that each manage their own key for the wallet.
  - Redundant [keys](#key) are assigned to each [wallet](#wallet) for recovery purposes. This ensures that the funds are still available in the event one of the primary keys becomes inaccessible for any reason. One common method of achieving this goal is to create a wallet that requires any 2 of 3 possible signatures in order to spend funds (i.e. there is 1 redundant key)
  - Any [keys](#key) that have signing authority on a single [wallet](#wallet) must be stored in different locations. By separating the wallet's keys across multiple locations, the risks associated with localized disruptions to business (i.e. fire, flood, earthquake, break-ins) do not affect the organization's ability to spend funds.
  - The organisation has a documented custody policy in place which details the company’s internal policies and procedures and covers the relevant areas of wallet creation.

level_three:
  - Any [keys](#key) that have signing authority on a single [wallet](#wallet) must be stored by multiple organizational entities. By giving keys to separate legal entities, such as lawyers, accountants, or other businesses, legal risks that can disrupt your business will not necessarily disrupt your funds. Note that this does not violate the Key/Seed Generation level 1 requirement, as the separate organizations fail to meet the definition of an [actor](#actor).
  - The organisation has a documented custody policy in place which details the company’s internal policies and procedures and covers the relevant areas of wallet creation.

components:
  - component: &010201
    id: 1.2.1
    title_short: Multiple keys for signing
    uncertified:
    level_one:
    level_two: Transactions require signatures from 2 or more keys
    level_three: Transactions require signatures from 2 or more keys
  - component: &010202
    id: 1.2.2
    title_short: Redundant key for recovery
    uncertified:
    level_one:
    level_two: Redundant keys are assigned for recovery purposes (i.e. 2of3, 3of5, etc.)
    level_three: Redundant keys are assigned for recovery purposes (i.e. 2of3, 3of5, etc.)
  - component: &010203
    id: 1.2.3
    title_short: Deterministic wallets
    uncertified:
    level_one:
    level_two: Addresses are assigned deterministically
    level_three: Addresses are assigned deterministically
  - component: &010204
    id: 1.2.4
    title_short: Geographic distribution of keys
    uncertified:
    level_one:
    level_two: Keys are distributed across multiple separate locations
    level_three: Keys are distributed across multiple separate locations
  - component: &010205
    id: 1.2.5
    title_short: Organizational distribution of keys
    uncertified:
    level_one:
    level_two:
    level_three: Keys are distributed across multiple organizational entities
- component: &010206
    id: 1.2.6
    title_short: Documented wallet creation policy
    uncertified:
    level_one: No formal policy, but staff members are familiar with the procedures followed.
    level_two: Documented wallet creation policy in place.
    level_three: Documented wallet creation policy in place.
